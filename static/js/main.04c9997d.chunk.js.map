{"version":3,"sources":["store/layout/types.ts","store/layout/actions.ts","store/projects/types.ts","store/layout/reducer.ts","store/projects/actions.ts","utils/callApi.ts","store/projects/sagas.ts","store/projects/reducer.ts","store/index.ts","styles/theme.ts","components/slideReveal/styles.ts","components/slideReveal/index.tsx","components/Layout.tsx","components/Link.tsx","pages/home/styles.ts","pages/home/index.tsx","pages/about/index.tsx","pages/index.tsx","main.tsx","serviceWorker.js","index.tsx","configureStore.ts"],"names":["LayoutActionTypes","ProjectsActionTypes","initialState","theme","fetchRequest","action","FETCH_REQUEST","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","callApi","method","url","path","fetch","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","handleFetch","watchFetchRequest","projectsSaga","API_ENDPOINT","process","regenerator_default","a","wrap","_context","prev","next","call","sent","error","put","t0","Error","stack","stop","_marked","this","_context2","takeEvery","_marked2","_context3","all","fork","_marked3","errors","undefined","loading","rootSaga","rootReducer","combineReducers","layout","state","arguments","length","type","SET_THEME","Object","objectSpread","payload","projects","store_marked","styled","default","ThemeProvider","css","keyframes","colors","bg0","bg1","fg0","fg1","fg2","fonts","cursive","Wrapper","div","_templateObject","Container","_templateObject2","props","align","Slider","_templateObject3","Divider","_templateObject4","Line","_templateObject5","SlideReveal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","leftSlider","rightSlider","line","tl","TimelineMax","paused","from","height","ease","Expo","easeOut","staggerFrom","children","x","opacity","Back","to","play","_this2","_this$props","left","right","react_default","createElement","key","ref","el","React","Component","Layout","Layout_templateObject","Link","RouterLink","Link_templateObject","Name","span","styles_templateObject","Big","styles_templateObject2","Small","styles_templateObject3","Home","renderLeft","Link_Link","renderRight","slideReveal","About","Pages","componentDidMount","BrowserRouter","Switch","Route","exact","component","connect","dispatch","App","store","react_redux_es","pages","Boolean","window","location","hostname","match","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","configureStore","initialReduxState","ReactDOM","render","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04c9997d.chunk.js","sourcesContent":["export type ThemeColors = 'light' | 'dark'\n\nexport enum LayoutActionTypes {\n  SET_THEME = '@@layout/SET_THEME'\n}\n\nexport interface LayoutState {\n  readonly theme: ThemeColors\n}\n","import { action } from 'typesafe-actions'\n\nimport { LayoutActionTypes, ThemeColors } from './types'\n\nexport const setTheme = (theme: ThemeColors) => action(LayoutActionTypes.SET_THEME, theme)\n","export interface Project extends ApiResponse {\n  name: string\n  url: string,\n  image: string,\n  techs: string,\n  description: string\n}\n\nexport type ApiResponse = Record<string, any>\n\nexport enum ProjectsActionTypes {\n  FETCH_REQUEST = '@@projects/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@projects/FETCH_SUCCESS',\n  FETCH_ERROR = '@@projects/FETCH_ERROR',\n  SELECT_PROJECT = '@@projects/SELECT_PROJECT',\n  SELECTED = '@@projects/SELECTED'\n}\n\nexport interface ProjectsState {\n  readonly loading: boolean\n  readonly data: Project[]\n  readonly errors?: string\n}\n","import { Reducer } from 'redux'\nimport { LayoutState, LayoutActionTypes } from './types'\n\nconst initialState: LayoutState = {\n  theme: 'light'\n}\n\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n  switch (action.type) {\n    case LayoutActionTypes.SET_THEME: {\n      return { ...state, theme: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as layoutReducer }\n","import { action } from 'typesafe-actions'\nimport { ProjectsActionTypes, Project } from './types'\n\nexport const fetchRequest = () => action(ProjectsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (data: Project[]) => action(ProjectsActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(ProjectsActionTypes.FETCH_ERROR, message)\n","export default function callApi(method: string, url: string, path: string, data?: any) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(res => res.json())\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { ProjectsActionTypes } from './types'\nimport { fetchError, fetchSuccess } from './actions'\nimport callApi from '../../utils/callApi'\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.jsonbin.io'\n\nfunction* handleFetch() {\n  try {\n    const res = yield call(callApi, 'get', API_ENDPOINT, '/b/5c2ec51481fe89272a83db53')\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(ProjectsActionTypes.FETCH_REQUEST, handleFetch)\n}\n\nfunction* projectsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default projectsSaga\n","import { Reducer } from 'redux'\nimport { ProjectsState, ProjectsActionTypes } from './types'\n\nconst initialState: ProjectsState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\nconst reducer: Reducer<ProjectsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case ProjectsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case ProjectsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case ProjectsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as projectsReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\n\nimport { LayoutState, layoutReducer } from './layout'\n\nimport projectsSaga from './projects/sagas'\nimport { projectsReducer } from './projects/reducer'\nimport { ProjectsState } from './projects/types'\n\nexport interface ApplicationState {\n  layout: LayoutState\n  projects: ProjectsState\n}\n\nexport interface ConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  layout: layoutReducer,\n  projects: projectsReducer,\n})\n\nexport function* rootSaga() {\n  yield all([fork(projectsSaga)])\n}\n","import * as styledComponents from \"styled-components\";\n\nconst {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\n\nconst colors = {\n  bg0: \"#0c0507\",\n  bg1: \"#232323\",\n  fg0: \"#f9f9f9\",\n  fg1: \"#f5851f\",\n  fg2: \"#f0780b\"\n}\n\nconst fonts = {\n  cursive: `'Kaushan Script', cursive`\n}\n\nexport const theme = {\n  colors,\n  fonts\n};\n\nexport type Theme = typeof theme;\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n","import styled from '../../styles/theme';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  width: 50%;\n  float:left;\n`;\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: ${(props: { align: string }) => props.align};\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const Slider = styled.div`\n  padding: 0 1rem;\n`;\n\nexport const Divider = styled.div`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100vh;\n`;\n\nexport const Line = styled.div`\n  display: table;\n  margin: 0 auto;\n  width: 1px;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.fg1}\n`;\n","import React from 'react';\nimport { TimelineMax, Expo, Back } from 'gsap';\nimport { Wrapper, Slider, Container, Divider, Line } from './styles';\n\ninterface OwnProps {\n  left: any,\n  right: any\n}\n\nclass SlideReveal extends React.Component<OwnProps> {\n  leftSlider: HTMLDivElement | null;\n  rightSlider: HTMLDivElement | null;\n  line: HTMLDivElement | null;\n  tl: TimelineMax;\n\n  constructor(props: any) {\n    super(props);\n\n    this.leftSlider = null;\n    this.rightSlider = null;\n    this.line = null;\n    this.tl = new TimelineMax({ paused: true});\n  }\n\n  componentDidMount() {\n    if (this.line && this.leftSlider && this.rightSlider) {\n      this.tl\n        .from(this.line, 0.5, { height: 0, ease: Expo.easeOut})\n        .staggerFrom(this.leftSlider.children, 0.5, { x: 10, opacity: 0, ease: Back.easeOut }, 0.1)\n        .staggerFrom(this.rightSlider.children, 0.5, { x: -10, opacity: 0, ease: Back.easeOut }, 0.1)\n        .to(this.line, 0.5, { opacity: 0.1 })\n        .play()\n    }\n  }\n\n  render() {\n    const { left, right } = this.props;\n\n    return [\n      <Wrapper key='left'>\n        <Container align=\"flex-end\">\n          <Slider ref={el => this.leftSlider = el}>\n            {left}\n          </Slider>\n        </Container>\n      </Wrapper>,\n      <Divider key='divider'>\n        <Line ref={el => this.line = el} />\n      </Divider>,\n      <Wrapper key='right'>\n        <Container align=\"flex-start\">\n          <Slider ref={el => this.rightSlider = el}>\n            {right}\n          </Slider>\n        </Container>\n      </Wrapper>\n    ]\n  }\n}\n\nexport default SlideReveal;\n","import styled from '../styles/theme' ;\n\nexport const Layout = styled.div`\n  background: ${props => props.theme.colors.bg0};\n  min-height: 100vh;\n  color: ${props => props.theme.colors.fg0};\n`;\n","import { Link as RouterLink } from 'react-router-dom';\n\nimport styled from '../styles/theme';\n\nexport const Link = styled(RouterLink)`\n  color: ${props => props.theme.colors.fg1};\n  text-decoration: none;\n`;\n","import styled from '../../styles/theme';\n\nexport const Name = styled.span`\n  font-family: ${props => props.theme.fonts.cursive};\n`;\n\nexport const Big = styled.div`\n  font-size: 3rem;\n  line-height: 3rem;\n  margin-bottom: 1rem;\n  text-align: right;\n`;\n\nexport const Small = styled.div`\n  text-align: ${(props: { align?: string }) => props.align};\n  margin-bottom: 0.5rem;\n`;\n","import React from 'react';\n\nimport { SlideReveal, Link } from '../../components';\nimport { Name, Big, Small } from './styles';\n\nclass Home extends React.Component<any> {\n  renderLeft = () => (\n    [\n      <Big>\n        hi, I'm <Name>Khangarid</Name>\n      </Big>,\n      <Small align=\"right\">\n        a web developer.\n      </Small>,\n      <Small align=\"right\">\n        know more <Link to=\"/about\">about me</Link>\n      </Small>\n    ]\n  )\n\n  renderRight = () => (\n    [\n      <Small>\n        I like to build web apps and marvel at my code.\n      </Small>,\n      <Small>\n        other than that video games and animes are my favorite things.\n      </Small>,\n      <Small>\n        see my <Link to=\"/portfolio\">portfolio</Link>\n      </Small>\n    ]\n  )\n\n  render() {\n    return (\n      <SlideReveal left={this.renderLeft()} right={this.renderRight()} />\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n        Hi, I'm Khangarid\n      </div>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { fetchRequest } from '../store/projects/actions';\nimport { Layout } from '../components';\nimport Home from './home/index';\nimport About from './about/index';\n\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest\n}\n\ntype AllProps = PropsFromDispatch;\n\nclass Pages extends Component<AllProps> {\n  componentDidMount = () => {\n    this.props.fetchRequest();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route key=\"home\" exact path=\"/\" component={Home} />,\n            <Route key=\"about\" exact path=\"/about\" component={About} />,\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchRequest: () => dispatch(fetchRequest())\n})\n\nexport default connect(null, mapDispatchToProps)(Pages);\n","import React, { Component } from 'react';\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { ApplicationState } from './store';\nimport { ThemeProvider, theme } from './styles';\nimport Pages from './pages/index';\nimport './styles/global.scss';\n\ninterface OwnProps {\n  store: Store<ApplicationState>\n}\n\nclass App extends Component<OwnProps> {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <Pages />\n        </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport configureStore from './configureStore';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\nimport { fetchRequest } from './store/projects/actions';\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(initialState);\n\nstore.dispatch(fetchRequest());\n\nReactDOM.render(<Main store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// If you use react-router, don't forget to pass in your history type.\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, rootReducer, rootSaga } from \"./store\";\n\nexport default function configureStore(\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  // create the composing function for our middlewares\n  const composeEnhancers = composeWithDevTools({});\n  // create the redux-saga middleware\n  const sagaMiddleware = createSagaMiddleware();\n\n  // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n  // we'll be passing from our entry point.\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n\n  // Don't forget to run the root saga, and return the store object.\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n"],"sourceRoot":""}