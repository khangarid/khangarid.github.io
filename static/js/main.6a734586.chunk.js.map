{"version":3,"sources":["store/layout/types.ts","store/layout/actions.ts","store/projects/types.ts","store/layout/reducer.ts","store/projects/actions.ts","utils/callApi.ts","store/projects/sagas.ts","store/projects/reducer.ts","store/index.ts","styles/theme.ts","components/Link.tsx","components/Nav.tsx","animations/page.ts","components/Columns.tsx","components/Layout.tsx","components/Circle.tsx","pages/home/styles.ts","pages/home/index.tsx","pages/about/index.tsx","pages/index.tsx","main.tsx","serviceWorker.js","index.tsx","configureStore.ts"],"names":["LayoutActionTypes","ProjectsActionTypes","initialState","navVisible","fetchRequest","action","FETCH_REQUEST","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","callApi","method","url","path","fetch","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","handleFetch","watchFetchRequest","projectsSaga","API_ENDPOINT","process","regenerator_default","a","wrap","_context","prev","next","call","sent","error","put","t0","Error","stack","stop","_marked","this","_context2","takeEvery","_marked2","_context3","all","fork","_marked3","errors","undefined","loading","rootSaga","rootReducer","combineReducers","layout","state","arguments","length","type","SET_NAV_VISIBILITY","Object","objectSpread","theme","payload","projects","store_marked","styled","default","css","ThemeProvider","keyframes","colors","bg0","bg1","fg0","fg1","fg2","fonts","cursive","Router","RouterLink","_templateObject","props","External","_templateObject2","components_Link","Icon","_templateObject3","Container","div","Nav_templateObject","MenuLink","Link","Nav_templateObject2","Left","Nav_templateObject3","Right","_templateObject4","connect","_ref","react_default","createElement","to","page","hide","target","TweenMax","opacity","y","ease","Expo","easeOut","revealH","line","leftSlider","rightSlider","tl","TimelineMax","paused","from","height","staggerFrom","children","x","Back","play","revealC","_ref2","img","text","set","staggerTo","delay","Columns","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","animation","_this2","_this$props","left","right","Columns_Container","Column","align","Slider","ref","el","Divider","key","Line","React","Component","Columns_templateObject","Columns_templateObject2","Columns_templateObject3","Columns_templateObject4","_templateObject5","Layout","Layout_templateObject","Circle","animate","setTimeout","setState","onReady","duration","Circle_Container","Svg","Ellipse","ry","rx","cy","cx","stroke-width","Content","ellipse","Circle_templateObject","Circle_templateObject2","svg","Circle_templateObject3","Circle_templateObject4","Circle_templateObject5","Name","span","styles_templateObject","Big","styles_templateObject2","Small","styles_templateObject3","Home","renderLeft","renderRight","Columns_Columns","About","Wrapper","about_Container","Circle_Circle","src","Text","Item","Emp","href","style","paddingTop","alt","about_templateObject","about_templateObject2","about_templateObject3","about_templateObject4","about_templateObject5","Pages","routes","name","componentDidMount","onExit","node","BrowserRouter","Route","render","location","react_transition_group","timeout","Switch","map","exact","_ref3","match","in","components_Nav","dispatch","App","store","react_redux_es","pages","Boolean","window","hostname","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","configureStore","initialReduxState","ReactDOM","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a734586.chunk.js","sourcesContent":["export enum LayoutActionTypes {\n  SET_NAV_VISIBILITY = '@@layout/SET_NAV_VISIBILITY'\n}\n\nexport interface LayoutState {\n  readonly navVisible: boolean\n}\n","import { action } from 'typesafe-actions'\n\nimport { LayoutActionTypes } from './types'\n\nexport const setNavVisibility = (visibility: boolean) => action(LayoutActionTypes.SET_NAV_VISIBILITY, visibility)\n","export interface Project extends ApiResponse {\n  name: string\n  url: string,\n  image: string,\n  techs: string,\n  description: string\n}\n\nexport type ApiResponse = Record<string, any>\n\nexport enum ProjectsActionTypes {\n  FETCH_REQUEST = '@@projects/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@projects/FETCH_SUCCESS',\n  FETCH_ERROR = '@@projects/FETCH_ERROR',\n  SELECT_PROJECT = '@@projects/SELECT_PROJECT',\n  SELECTED = '@@projects/SELECTED'\n}\n\nexport interface ProjectsState {\n  readonly loading: boolean\n  readonly data: Project[]\n  readonly errors?: string\n}\n","import { Reducer } from 'redux'\nimport { LayoutState, LayoutActionTypes } from './types'\n\nconst initialState: LayoutState = {\n  navVisible: false\n}\n\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n  switch (action.type) {\n    case LayoutActionTypes.SET_NAV_VISIBILITY: {\n      return { ...state, theme: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as layoutReducer }\n","import { action } from 'typesafe-actions'\nimport { ProjectsActionTypes, Project } from './types'\n\nexport const fetchRequest = () => action(ProjectsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (data: Project[]) => action(ProjectsActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(ProjectsActionTypes.FETCH_ERROR, message)\n","export default function callApi(method: string, url: string, path: string, data?: any) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(res => res.json())\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { ProjectsActionTypes } from './types'\nimport { fetchError, fetchSuccess } from './actions'\nimport callApi from '../../utils/callApi'\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.jsonbin.io'\n\nfunction* handleFetch() {\n  try {\n    const res = yield call(callApi, 'get', API_ENDPOINT, '/b/5c2ec51481fe89272a83db53')\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(ProjectsActionTypes.FETCH_REQUEST, handleFetch)\n}\n\nfunction* projectsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default projectsSaga\n","import { Reducer } from 'redux'\nimport { ProjectsState, ProjectsActionTypes } from './types'\n\nconst initialState: ProjectsState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\nconst reducer: Reducer<ProjectsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case ProjectsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case ProjectsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case ProjectsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as projectsReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\n\nimport { LayoutState, layoutReducer } from './layout'\n\nimport projectsSaga from './projects/sagas'\nimport { projectsReducer } from './projects/reducer'\nimport { ProjectsState } from './projects/types'\n\nexport interface ApplicationState {\n  layout: LayoutState\n  projects: ProjectsState\n}\n\nexport interface ConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  layout: layoutReducer,\n  projects: projectsReducer,\n})\n\nexport function* rootSaga() {\n  yield all([fork(projectsSaga)])\n}\n","import * as styledComponents from \"styled-components\";\n\nconst {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\n\nconst colors = {\n  bg0: \"#0c0507\",\n  bg1: \"#232323\",\n  fg0: \"#f9f9f9\",\n  fg1: \"#f5851f\",\n  fg2: \"#f0780b\"\n}\n\nconst fonts = {\n  cursive: `'Kaushan Script', cursive`\n}\n\nexport const theme = {\n  colors,\n  fonts\n};\n\nexport type Theme = typeof theme;\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n","import { Link as RouterLink } from 'react-router-dom';\n\nimport styled from '../styles/theme';\n\nconst Router = styled(RouterLink)`\n  color: ${props => props.theme.colors.fg1};\n  text-decoration: none;\n`;\n\nconst External = styled.a`\n  color: ${props => props.theme.colors.fg1};\n  text-decoration: none;\n`;\n\nconst Icon = styled(External)`\n  img {\n    width: 32px;\n    fill: ${props => props.theme.colors.fg0};\n    transition: all 0.2s ease;\n  }\n\n  padding: 0 0.5rem;\n\n  &:hover {\n    img {\n      transform: translate(0, -5px);\n    }\n  }\n`;\n\nexport default { External, Router, Icon }\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport styled from '../styles/theme';\nimport Link from './Link';\n\ninterface PropsFromState {\n  navVisible: boolean\n}\n\ntype AllProps = PropsFromState;\n\nconst Nav = ({ navVisible }: AllProps) => {\n  return (\n    <Container>\n      <Left>\n        <MenuLink to=\"/\">Khangarid</MenuLink>\n      </Left>\n      <Right>\n        <MenuLink to=\"/about\">about</MenuLink>\n        <MenuLink to=\"/portfolio\">portfolio</MenuLink>\n      </Right>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 64px;\n  line-height: 64px;\n  padding: 0 3rem;\n`;\n\nconst MenuLink = styled(Link.Router)`\n  color: ${props => props.theme.colors.fg0};\n`;\n\nconst Left = styled.div`\n  font-family: ${props => props.theme.fonts.cursive};\n  font-size: 1.2rem;\n  float: left;\n`;\n\nconst Right = styled.div`\n  float: right;\n  ${MenuLink} {\n    font-size: 0.8rem;\n    margin-left: 1.5rem;\n    text-transform: uppercase;\n  }\n`;\n\n\nconst mapStateToProps = (state: any) => ({\n  navVisible: state.layout.navVisible\n})\n\nexport default connect(mapStateToProps)(Nav);\n","import { TimelineMax, TweenMax, Expo, Back } from \"gsap\";\n\nexport const hide = (target: HTMLElement) => {\n  return TweenMax.to(target, 0.4, {\n    opacity: 0,\n    y: 10,\n    ease: Expo.easeOut\n  });\n};\n\nexport const revealH = ({\n  line,\n  leftSlider,\n  rightSlider\n}: {\n  line: HTMLElement;\n  leftSlider: HTMLElement;\n  rightSlider: HTMLElement;\n}): TimelineMax => {\n  const tl = new TimelineMax({ paused: true });\n\n  tl.from(line, 0.5, { height: 0, ease: Expo.easeOut })\n    .staggerFrom(\n      leftSlider.children,\n      0.5,\n      { x: 10, opacity: 0, ease: Back.easeOut },\n      0.1,\n      \"slide\"\n    )\n    .staggerFrom(\n      rightSlider.children,\n      0.5,\n      { x: -10, opacity: 0, ease: Back.easeOut },\n      0.1,\n      \"slide\"\n    )\n    .to(line, 0.5, { opacity: 0.1 })\n    .play();\n\n  return tl;\n};\n\nexport const revealC = ({\n  img,\n  text\n}: {\n  img: HTMLElement,\n  text: HTMLElement\n}): TimelineMax => {\n  const tl = new TimelineMax({ paused: true });\n\n  TweenMax.set(img, { opacity: 0 });\n  TweenMax.set(text.children, { opacity: 0, y: -10 });\n\n  tl\n    .to(img, 1, { opacity: 1, ease: Expo.easeOut }, 'reveal')\n    .staggerTo(text.children, 0.5, { y: 0, opacity: 1, ease: Back.easeOut }, 0.1, 'reveal')\n    .delay(0.2)\n\n  return tl;\n}\n\nexport default { hide, revealH, revealC };\n","import React from 'react';\n\nimport styled from '../styles/theme';\nimport animation from '../animations/page';\n\ninterface OwnProps {\n  left: any,\n  right: any\n}\n\nclass Columns extends React.Component<OwnProps> {\n  leftSlider: HTMLDivElement | null;\n  rightSlider: HTMLDivElement | null;\n  line: HTMLDivElement | null;\n\n  constructor(props: any) {\n    super(props);\n\n    this.leftSlider = null;\n    this.rightSlider = null;\n    this.line = null;\n  }\n\n  componentDidMount() {\n    if (this.line && this.leftSlider && this.rightSlider) {\n      animation.revealH({\n        line: this.line,\n        leftSlider: this.leftSlider,\n        rightSlider: this.rightSlider\n      })\n    }\n  }\n\n  render() {\n    const { left, right } = this.props;\n\n    return (\n      <Container>\n        <Column align='flex-end'>\n          <Slider ref={el => this.leftSlider = el}>\n            {left}\n          </Slider>\n        </Column>\n        <Divider key='divider'>\n          <Line ref={el => this.line = el} />\n        </Divider>\n        <Column align='flex-start'>\n          <Slider ref={el => this.rightSlider = el}>\n            {right}\n          </Slider>\n        </Column>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n\nconst Column = styled.div`\n  width: 50%;\n  float: left;\n  height: 100vh;\n  overflow: auto;\n  display: flex;\n  justify-content: ${(props: { align: string }) => props.align};\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  padding: 0 1rem;\n`;\n\nconst Divider = styled.div`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100vh;\n`;\n\nconst Line = styled.div`\n  display: table;\n  margin: 0 auto;\n  width: 1px;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.fg1}\n`;\n\n\nexport { Columns };\n","import styled from '../styles/theme' ;\n\nexport const Layout = styled.div`\n  background: ${props => props.theme.colors.bg0};\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  color: ${props => props.theme.colors.fg0};\n`;\n","import React from \"react\";\n\nimport styled, { css } from \"../styles/theme\";\n\ninterface OwnProps {\n  children: React.ReactNode;\n  duration: number;\n  onReady: Function;\n}\n\nclass Circle extends React.Component<OwnProps> {\n  state = {\n    animate: false\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ animate: true });\n    }, 0);\n\n    setTimeout(() => {\n      this.props.onReady();\n    }, this.props.duration)\n  }\n\n  render() {\n    const { animate } = this.state;\n    const { duration } = this.props;\n\n    return (\n      <Container>\n        <Svg>\n          <Ellipse\n            duration={duration}\n            animate={animate}\n            ry=\"60\"\n            rx=\"60\"\n            cy=\"62.5\"\n            cx=\"62.5\"\n            stroke-width=\"1\"\n          />\n        </Svg>\n        <Content>{this.props.children}</Content>\n      </Container>\n    );\n  }\n}\n\ninterface EllipseProps {\n  duration: number;\n  animate?: boolean;\n}\n\nconst Ellipse = styled.ellipse`\n  position: absolute;\n  fill: transparent;\n  stroke-dasharray: 377;\n  stroke-dashoffset: 377;\n  stroke: #f5851f;\n  transform-origin: 50% 50%;\n  transform: rotate(-270deg);\n  transition: all ${(props: EllipseProps) => props.duration}ms ease;\n\n  ${(props: EllipseProps) =>\n    props.animate &&\n    css`\n      stroke-dashoffset: 0;\n      transform: rotate(-90deg);\n    `};\n`;\n\nconst Svg = styled.svg`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n`;\n\nconst Content = styled.div`\n  border-radius: 50%;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst Container = styled.div`\n  margin: auto;\n  position: relative;\n  width: 124px;\n  height: 124px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport { Circle };\n","import styled from '../../styles/theme';\n\nexport const Name = styled.span`\n  font-family: ${props => props.theme.fonts.cursive};\n`;\n\nexport const Big = styled.div`\n  font-size: 3rem;\n  line-height: 3rem;\n  margin-bottom: 1rem;\n  text-align: right;\n`;\n\nexport const Small = styled.div`\n  text-align: ${(props: { align?: string }) => props.align};\n  margin-bottom: 0.5rem;\n`;\n","import React from 'react';\n\nimport { Columns, Link } from '../../components';\nimport { Name, Big, Small } from './styles';\n\nclass Home extends React.Component<any> {\n  renderLeft = () => (\n    [\n      <Big>\n        hi, I'm <Name>Khangarid</Name>\n      </Big>,\n      <Small align=\"right\">\n        a web developer.\n      </Small>,\n      <Small align=\"right\">\n        know more <Link.Router to=\"/about\">about me</Link.Router>\n      </Small>\n    ]\n  )\n\n  renderRight = () => (\n    [\n      <Small>\n        I like to build web apps and marvel at my code.\n      </Small>,\n      <Small>\n        other than that video games and animes are my favorite things.\n      </Small>,\n      <Small>\n        see my <Link.Router to=\"/portfolio\">portfolio</Link.Router>\n      </Small>\n    ]\n  )\n\n  render() {\n    return (\n      <Columns left={this.renderLeft()} right={this.renderRight()} />\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { TimelineMax } from 'gsap';\n\nimport styled from '../../styles/theme';\nimport { Circle, Link } from '../../components';\nimport animation from '../../animations/page';\n\nclass About extends React.Component<any> {\n  img: HTMLElement | null;\n  text: HTMLElement | null;\n  tl: TimelineMax;\n\n  constructor(props: any) {\n    super(props);\n\n    this.img = null;\n    this.text = null;\n    this.tl = new TimelineMax();\n  }\n\n  componentDidMount() {\n    if (this.img && this.text) {\n      this.tl = animation.revealC({ img: this.img, text: this.text});\n    }\n  }\n\n  animate = () => {\n    this.tl.play();\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Container>\n          <Circle onReady={this.animate} duration={500}>\n            <img ref={el => this.img = el} src=\"https://www.gettyimages.com/gi-resources/images/CreativeLandingPage/HP_Sept_24_2018/CR3_GettyImages-159018836.jpg\" />\n          </Circle>\n          <Text ref={el => this.text = el}>\n            <Item>\n              I've 2 years of experience with <Emp>web development</Emp>, mostly on <Emp>front end</Emp> side.\n            </Item>\n            <Item>\n              expertise with JS, React, Redux, CSS, HTML, Node\n            </Item>\n            <Item>\n              I'm currently open to new opportunities, please do reach me by&nbsp;\n              <Link.External href='mailto:khangarid.davaadorj@gmail.com'>\n                khangarid.davaadorj@gmail.com\n              </Link.External>\n            </Item>\n            <Item style={{ paddingTop: '1rem' }}>\n              <Link.Icon href=\"https://www.linkedin.com/in/khangarid-davaadorj/\" target=\"_blank\">\n                <img src=\"/icons/linkedin.svg\" alt=\"Facebook\"/>\n              </Link.Icon>\n              <Link.Icon href=\"https://github.com/khangarid\" target=\"_blank\">\n                <img src=\"/icons/github.svg\" alt=\"Facebook\"/>\n              </Link.Icon>\n              <Link.Icon href=\"https://www.facebook.com/khngd\" target=\"_blank\">\n                <img src=\"/icons/facebook.svg\" alt=\"Facebook\"/>\n              </Link.Icon>\n            </Item>\n          </Text>\n        </Container>\n      </Wrapper>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n\nconst Container = styled.div`\n  padding: 3rem 1rem;\n  max-width: 600px;\n  text-align: center;\n`;\n\nconst Text = styled.div`\n  margin-top: 2rem;\n`;\n\nconst Item = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst Emp = styled.span`\n  border-bottom: 1px solid #fff;\n`;\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { TransitionGroup, Transition } from \"react-transition-group\";\n\nimport { fetchRequest } from '../store/projects/actions';\nimport { Layout, Nav } from '../components';\nimport Home from './home/index';\nimport About from './about/index';\nimport animation from '../animations/page';\n\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest\n}\n\ntype AllProps = PropsFromDispatch;\n\nclass Pages extends Component<AllProps> {\n  state = {\n    routes: [\n      { path: \"/\", name: \"Home\", Component: Home },\n      { path: \"/about\", name: \"About\", Component: About }\n    ]\n  };\n\n  componentDidMount = () => {\n    this.props.fetchRequest();\n  }\n\n  onExit = (node: HTMLElement) => {\n    animation.hide(node);\n  };\n\n  render() {\n    const { routes } = this.state;\n\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Route\n            render={({ location }) => (\n              <TransitionGroup>\n                <Transition\n                  key={location.key}\n                  timeout={400}\n                  onExit={this.onExit}\n                >\n                  <Switch location={location}>\n                    {routes.map(({ path, Component }) => (\n                      <Route key={path} exact path={path}>\n                        {({ match }) => <Component in={match != null} />}\n                      </Route>\n                    ))}\n                  </Switch>\n                </Transition>\n              </TransitionGroup>\n            )}\n          />\n          <Nav />\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchRequest: () => dispatch(fetchRequest())\n})\n\nexport default connect(null, mapDispatchToProps)(Pages);\n","import React, { Component } from 'react';\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { ApplicationState } from './store';\nimport { ThemeProvider, theme } from './styles';\nimport Pages from './pages/index';\nimport './styles/global.scss';\n\ninterface OwnProps {\n  store: Store<ApplicationState>\n}\n\nclass App extends Component<OwnProps> {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <Pages />\n        </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport configureStore from './configureStore';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\nimport { fetchRequest } from './store/projects/actions';\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(initialState);\n\nstore.dispatch(fetchRequest());\n\nReactDOM.render(<Main store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// If you use react-router, don't forget to pass in your history type.\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, rootReducer, rootSaga } from \"./store\";\n\nexport default function configureStore(\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  // create the composing function for our middlewares\n  const composeEnhancers = composeWithDevTools({});\n  // create the redux-saga middleware\n  const sagaMiddleware = createSagaMiddleware();\n\n  // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n  // we'll be passing from our entry point.\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n\n  // Don't forget to run the root saga, and return the store object.\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n"],"sourceRoot":""}